apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

version = '0.0.2'

android {
    compileSdkVersion 24
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
}

ext {
    bintrayRepo = 'ResearchSuiteAppFramework'
    bintrayName = 'researchsuiteresultsprocessor'

    publishedGroupId = 'edu.cornell.tech.foundry'
    libraryName = 'researchsuiteresultsprocessor'
    artifact = 'researchsuiteresultsprocessor'

    libraryDescription = 'The ResearchSuite Results Processor is an easy and extensible way to process results for ResearchStack.'

    siteUrl = 'https://researchsuite.org'
    gitUrl = 'https://github.com/cornelltech/ResearchSuiteAppFramework-Android.git'

    libraryVersion = version

    userOrgName = 'edu-cornell-tech-foundry'

    //Dependent upon BINTRAY_* env set
    //http://stackoverflow.com/questions/25385934/setting-environment-variables-via-launchd-conf-no-longer-works-in-os-x-yosemite

    bintrayUser = System.getenv('BINTRAY_USER')
    bintrayKey = System.getenv('BINTRAY_KEY')
    bintrayDevName = System.getenv('BINTRAY_DEVELOPER_NAME')
    bintrayDevEmail = System.getenv('BINTRAY_DEVELOPER_EMAIL')

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.1.1'
    compile 'com.google.code.gson:gson:2.4'
    compile 'org.researchstack:backbone:1.1.1-SNAPSHOT'
}

group = publishedGroupId                               // Maven Group ID for the artifact

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id bintrayUser
                        name bintrayDevName
                        email bintrayDevEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        failOnError false
        source = android.sourceSets.main.java.srcDirs
    }

    afterEvaluate {
        javadoc.classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        javadoc.classpath += files(android.libraryVariants.collect { variant ->
            variant.javaCompile.classpath.files
        })
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = bintrayUser
    key = bintrayKey

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = userOrgName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = true
        publish = true
    }
}
